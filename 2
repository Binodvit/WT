<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VIT Projects Showcase</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom CSS -->
    <style>
        body {
            background-color: #f8f9fa;
        }
        .header {
            background: linear-gradient(90deg, #007bff, #00d4ff);
            color: white;
            padding: 2rem 0;
            text-align: center;
            margin-bottom: 2rem;
        }
        .nav-pills .nav-link {
            border-radius: 50rem;
            margin: 0.5rem;
        }
        .project-card {
            transition: transform 0.3s;
            margin-bottom: 1.5rem;
        }
        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .add-project-form, .search-filter-section {
            max-width: 600px;
            margin: 2rem auto;
            padding: 1.5rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .badge-status {
            font-size: 0.85rem;
        }
        @media (max-width: 576px) {
            .nav-pills .nav-link {
                margin: 0.2rem;
                font-size: 0.9rem;
            }
            .add-project-form, .search-filter-section {
                margin: 1rem;
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <h1>VIT Projects Showcase</h1>
        <p>Explore Course and Design Thinking Projects at VIT</p>
    </div>

    <!-- Main Container -->
    <div class="container">
        <!-- Navigation Tabs -->
        <ul class="nav nav-pills justify-content-center mb-4" id="projectTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="course-tab" data-bs-toggle="pill" data-bs-target="#course" type="button" role="tab" aria-controls="course" aria-selected="true">Course Projects</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="dt-tab" data-bs-toggle="pill" data-bs-target="#dt" type="button" role="tab" aria-controls="dt" aria-selected="false">DT Projects</button>
            </li>
        </ul>

        <!-- Search and Filter Section -->
        <div class="search-filter-section">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search projects...">
                </div>
                <div class="col-md-6 mb-3">
                    <select class="form-select" id="categoryFilter">
                        <option value="">All Categories</option>
                        <option value="Web Development">Web Development</option>
                        <option value="AI">AI</option>
                        <option value="IoT">IoT</option>
                        <option value="Mobile Apps">Mobile Apps</option>
                    </select>
                </div>
                <div class="col-12">
                    <button class="btn btn-primary me-2" id="exportProjects">Export Projects</button>
                    <input type="file" id="importProjects" accept=".json" style="display: none;">
                    <button class="btn btn-secondary" id="triggerImport">Import Projects</button>
                </div>
            </div>
        </div>

        <!-- Tab Content -->
        <div class="tab-content" id="projectTabContent">
            <!-- Course Projects Tab -->
            <div class="tab-pane fade show active" id="course" role="tabpanel" aria-labelledby="course-tab">
                <div class="row" id="courseProjects"></div>
            </div>
            <!-- DT Projects Tab -->
            <div class="tab-pane fade" id="dt" role="tabpanel" aria-labelledby="dt-tab">
                <div class="row" id="dtProjects"></div>
            </div>
        </div>

        <!-- Add Project Form -->
        <div class="add-project-form">
            <h3>Add New Project</h3>
            <form id="projectForm">
                <div class="mb-3">
                    <label for="projectTitle" class="form-label">Project Title</label>
                    <input type="text" class="form-control" id="projectTitle" required>
                </div>
                <div class="mb-3">
                    <label for="projectDescription" class="form-label">Description</label>
                    <textarea class="form-control" id="projectDescription" rows="4" required></textarea>
                </div>
                <div class="mb-3">
                    <label for="projectType" class="form-label">Project Type</label>
                    <select class="form-select" id="projectType" required>
                        <option value="course">Course Project</option>
                        <option value="dt">DT Project</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="projectCategory" class="form-label">Category</label>
                    <select class="form-select" id="projectCategory" required>
                        <option value="Web Development">Web Development</option>
                        <option value="AI">AI</option>
                        <option value="IoT">IoT</option>
                        <option value="Mobile Apps">Mobile Apps</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="projectStatus" class="form-label">Status</label>
                    <select class="form-select" id="projectStatus" required>
                        <option value="In Progress">In Progress</option>
                        <option value="Completed">Completed</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Add Project</button>
            </form>
        </div>
    </div>

    <!-- Edit Project Modal -->
    <div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProjectModalLabel">Edit Project</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProjectForm">
                        <input type="hidden" id="editProjectId">
                        <div class="mb-3">
                            <label for="editProjectTitle" class="form-label">Project Title</label>
                            <input type="text" class="form-control" id="editProjectTitle" required>
                        </div>
                        <div class="mb-3">
                            <label for="editProjectDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="editProjectDescription" rows="4" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="editProjectType" class="form-label">Project Type</label>
                            <select class="form-select" id="editProjectType" required>
                                <option value="course">Course Project</option>
                                <option value="dt">DT Project</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="editProjectCategory" class="form-label">Category</label>
                            <select class="form-select" id="editProjectCategory" required>
                                <option value="Web Development">Web Development</option>
                                <option value="AI">AI</option>
                                <option value="IoT">IoT</option>
                                <option value="Mobile Apps">Mobile Apps</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="editProjectStatus" class="form-label">Status</label>
                            <select class="form-select" id="editProjectStatus" required>
                                <option value="In Progress">In Progress</option>
                                <option value="Completed">Completed</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveEditProject">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script>
        $(document).ready(function() {
            // Initialize localStorage if empty
            if (!localStorage.getItem('projects')) {
                localStorage.setItem('projects', JSON.stringify([]));
            }

            // Load projects from localStorage
            function loadProjects(searchTerm = '', category = '') {
                const projects = JSON.parse(localStorage.getItem('projects')) || [];
                $('#courseProjects').empty();
                $('#dtProjects').empty();

                const filteredProjects = projects.filter(project => {
                    const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                                         project.description.toLowerCase().includes(searchTerm.toLowerCase());
                    const matchesCategory = category ? project.category === category : true;
                    return matchesSearch && matchesCategory;
                });

                filteredProjects.forEach(project => {
                    const statusClass = project.status === 'Completed' ? 'bg-success' : 'bg-warning';
                    const card = `
                        <div class="col-md-4">
                            <div class="card project-card">
                                <div class="card-body">
                                    <h5 class="card-title">${project.title}</h5>
                                    <p class="card-text">${project.description}</p>
                                    <p><span class="badge ${statusClass} badge-status">${project.status}</span></p>
                                    <p><small>Category: ${project.category}</small></p>
                                    <button class="btn btn-primary btn-sm edit-project" data-id="${project.id}">Edit</button>
                                    <button class="btn btn-danger btn-sm delete-project" data-id="${project.id}">Delete</button>
                                </div>
                            </div>
                        </div>
                    `;
                    if (project.type === 'course') {
                        $('#courseProjects').append(card);
                    } else {
                        $('#dtProjects').append(card);
                    }
                });
            }

            // Add new project
            $('#projectForm').on('submit', function(e) {
                e.preventDefault();
                const title = $('#projectTitle').val();
                const description = $('#projectDescription').val();
                const type = $('#projectType').val();
                const category = $('#projectCategory').val();
                const status = $('#projectStatus').val();

                const projects = JSON.parse(localStorage.getItem('projects')) || [];
                const newProject = {
                    id: Date.now(),
                    title: title,
                    description: description,
                    type: type,
                    category: category,
                    status: status
                };

                projects.push(newProject);
                localStorage.setItem('projects', JSON.stringify(projects));

                $('#projectForm')[0].reset();
                loadProjects();
            });

            // Edit project
            $(document).on('click', '.edit-project', function() {
                const id = $(this).data('id');
                const projects = JSON.parse(localStorage.get HuffmanProjects')) || [];
                const project = projects.find(p => p.id === id);

                if (project) {
                    $('#editProjectId').val(project.id);
                    $('#editProjectTitle').val(project.title);
                    $('#editProjectDescription').val(project.description);
                    $('#editProjectType').val(project.type);
                    $('#editProjectCategory').val(project.category);
                    $('#editProjectStatus').val(project.status);
                    $('#editProjectModal').modal('show');
                }
            });

            // Save edited project
            $('#saveEditProject').on('click', function() {
                const id = parseInt($('#editProjectId').val());
                const projects = JSON.parse(localStorage.getItem('projects')) || [];
                const projectIndex = projects.findIndex(p => p.id === id);

                if (projectIndex !== -1) {
                    projects[projectIndex] = {
                        id: id,
                        title: $('#editProjectTitle').val(),
                        description: $('#editProjectDescription').val(),
                        type: $('#editProjectType').val(),
                        category: $('#editProjectCategory').val(),
                        status: $('#editProjectStatus').val()
                    };
                    localStorage.setItem('projects', JSON.stringify(projects));
                    $('#editProjectModal').modal('hide');
                    loadProjects();
                }
            });

            // Delete project
            $(document).on('click', '.delete-project', function() {
                const id = $(this).data('id');
                let projects = JSON.parse(localStorage.getItem('projects')) || [];
                projects = projects.filter(project => project.id !== id);
                localStorage.setItem('projects', JSON.stringify(projects));
                loadProjects();
            });

            // Search projects
            $('#searchInput').on('input', function() {
                const searchTerm = $(this).val();
                const category = $('#categoryFilter').val();
                loadProjects(searchTerm, category);
            });

            // Filter by category
            $('#categoryFilter').on('change', function() {
                const category = $(this).val();
                const searchTerm = $('#searchInput').val();
                loadProjects(searchTerm, category);
            });

            // Export projects
            $('#exportProjects').on('click', function() {
                const projects = JSON.parse(localStorage.getItem('projects')) || [];
                const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(projects));
                const downloadAnchor = document.createElement('a');
                downloadAnchor.setAttribute("href", dataStr);
                downloadAnchor.setAttribute("download", "vit_projects.json");
                document.body.appendChild(downloadAnchor);
                downloadAnchor.click();
                downloadAnchor.remove();
            });

            // Trigger import
            $('#triggerImport').on('click', function() {
                $('#importProjects').click();
            });

            // Import projects
            $('#importProjects').on('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        try {
                            const importedProjects = JSON.parse(e.target.result);
                            if (Array.isArray(importedProjects)) {
                                localStorage.setItem('projects', JSON.stringify(importedProjects));
                                loadProjects();
                            } else {
                                alert('Invalid JSON format');
                            }
                        } catch (err) {
                            alert('Error importing projects');
                        }
                    };
                    reader.readAsText(file);
                }
            });

            // Initial load
            loadProjects();
        });
    </script>
</body>
</html>
